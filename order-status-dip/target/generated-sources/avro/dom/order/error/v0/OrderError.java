/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package dom.order.error.v0;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Error information for failed order processing */
@org.apache.avro.specific.AvroGenerated
public class OrderError extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8792430640769096029L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderError\",\"namespace\":\"dom.order.error.v0\",\"doc\":\"Error information for failed order processing\",\"fields\":[{\"name\":\"message_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Any unique identifier which may be used for de-duplication of messages during consumption\",\"exmaple\":\"d59d8d8c-c781-11eb-b8bc-0242ac130003\"},{\"name\":\"order_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Identifier for the order as referenced within the seller's system\",\"default\":null},{\"name\":\"error_code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique code identifying the type of error\"},{\"name\":\"error_message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Descriptive message explaining the error\"},{\"name\":\"error_timestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Timestamp when the error occurred in ISO-8601 format\",\"example\":\"2022-12-28T16:55:30.252Z\"},{\"name\":\"original_payload\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"JSON string representation of the original message that caused the error\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderError> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderError> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrderError> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrderError> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrderError> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrderError to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrderError from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrderError instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrderError fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Any unique identifier which may be used for de-duplication of messages during consumption */
  private java.lang.String message_id;
  /** Identifier for the order as referenced within the seller's system */
  private java.lang.String order_number;
  /** Unique code identifying the type of error */
  private java.lang.String error_code;
  /** Descriptive message explaining the error */
  private java.lang.String error_message;
  /** Timestamp when the error occurred in ISO-8601 format */
  private java.lang.String error_timestamp;
  /** JSON string representation of the original message that caused the error */
  private java.lang.String original_payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderError() {}

  /**
   * All-args constructor.
   * @param message_id Any unique identifier which may be used for de-duplication of messages during consumption
   * @param order_number Identifier for the order as referenced within the seller's system
   * @param error_code Unique code identifying the type of error
   * @param error_message Descriptive message explaining the error
   * @param error_timestamp Timestamp when the error occurred in ISO-8601 format
   * @param original_payload JSON string representation of the original message that caused the error
   */
  public OrderError(java.lang.String message_id, java.lang.String order_number, java.lang.String error_code, java.lang.String error_message, java.lang.String error_timestamp, java.lang.String original_payload) {
    this.message_id = message_id;
    this.order_number = order_number;
    this.error_code = error_code;
    this.error_message = error_message;
    this.error_timestamp = error_timestamp;
    this.original_payload = original_payload;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return message_id;
    case 1: return order_number;
    case 2: return error_code;
    case 3: return error_message;
    case 4: return error_timestamp;
    case 5: return original_payload;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: message_id = value$ != null ? value$.toString() : null; break;
    case 1: order_number = value$ != null ? value$.toString() : null; break;
    case 2: error_code = value$ != null ? value$.toString() : null; break;
    case 3: error_message = value$ != null ? value$.toString() : null; break;
    case 4: error_timestamp = value$ != null ? value$.toString() : null; break;
    case 5: original_payload = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'message_id' field.
   * @return Any unique identifier which may be used for de-duplication of messages during consumption
   */
  public java.lang.String getMessageId() {
    return message_id;
  }


  /**
   * Sets the value of the 'message_id' field.
   * Any unique identifier which may be used for de-duplication of messages during consumption
   * @param value the value to set.
   */
  public void setMessageId(java.lang.String value) {
    this.message_id = value;
  }

  /**
   * Gets the value of the 'order_number' field.
   * @return Identifier for the order as referenced within the seller's system
   */
  public java.lang.String getOrderNumber() {
    return order_number;
  }


  /**
   * Sets the value of the 'order_number' field.
   * Identifier for the order as referenced within the seller's system
   * @param value the value to set.
   */
  public void setOrderNumber(java.lang.String value) {
    this.order_number = value;
  }

  /**
   * Gets the value of the 'error_code' field.
   * @return Unique code identifying the type of error
   */
  public java.lang.String getErrorCode() {
    return error_code;
  }


  /**
   * Sets the value of the 'error_code' field.
   * Unique code identifying the type of error
   * @param value the value to set.
   */
  public void setErrorCode(java.lang.String value) {
    this.error_code = value;
  }

  /**
   * Gets the value of the 'error_message' field.
   * @return Descriptive message explaining the error
   */
  public java.lang.String getErrorMessage() {
    return error_message;
  }


  /**
   * Sets the value of the 'error_message' field.
   * Descriptive message explaining the error
   * @param value the value to set.
   */
  public void setErrorMessage(java.lang.String value) {
    this.error_message = value;
  }

  /**
   * Gets the value of the 'error_timestamp' field.
   * @return Timestamp when the error occurred in ISO-8601 format
   */
  public java.lang.String getErrorTimestamp() {
    return error_timestamp;
  }


  /**
   * Sets the value of the 'error_timestamp' field.
   * Timestamp when the error occurred in ISO-8601 format
   * @param value the value to set.
   */
  public void setErrorTimestamp(java.lang.String value) {
    this.error_timestamp = value;
  }

  /**
   * Gets the value of the 'original_payload' field.
   * @return JSON string representation of the original message that caused the error
   */
  public java.lang.String getOriginalPayload() {
    return original_payload;
  }


  /**
   * Sets the value of the 'original_payload' field.
   * JSON string representation of the original message that caused the error
   * @param value the value to set.
   */
  public void setOriginalPayload(java.lang.String value) {
    this.original_payload = value;
  }

  /**
   * Creates a new OrderError RecordBuilder.
   * @return A new OrderError RecordBuilder
   */
  public static dom.order.error.v0.OrderError.Builder newBuilder() {
    return new dom.order.error.v0.OrderError.Builder();
  }

  /**
   * Creates a new OrderError RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderError RecordBuilder
   */
  public static dom.order.error.v0.OrderError.Builder newBuilder(dom.order.error.v0.OrderError.Builder other) {
    if (other == null) {
      return new dom.order.error.v0.OrderError.Builder();
    } else {
      return new dom.order.error.v0.OrderError.Builder(other);
    }
  }

  /**
   * Creates a new OrderError RecordBuilder by copying an existing OrderError instance.
   * @param other The existing instance to copy.
   * @return A new OrderError RecordBuilder
   */
  public static dom.order.error.v0.OrderError.Builder newBuilder(dom.order.error.v0.OrderError other) {
    if (other == null) {
      return new dom.order.error.v0.OrderError.Builder();
    } else {
      return new dom.order.error.v0.OrderError.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrderError instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderError>
    implements org.apache.avro.data.RecordBuilder<OrderError> {

    /** Any unique identifier which may be used for de-duplication of messages during consumption */
    private java.lang.String message_id;
    /** Identifier for the order as referenced within the seller's system */
    private java.lang.String order_number;
    /** Unique code identifying the type of error */
    private java.lang.String error_code;
    /** Descriptive message explaining the error */
    private java.lang.String error_message;
    /** Timestamp when the error occurred in ISO-8601 format */
    private java.lang.String error_timestamp;
    /** JSON string representation of the original message that caused the error */
    private java.lang.String original_payload;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(dom.order.error.v0.OrderError.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.message_id)) {
        this.message_id = data().deepCopy(fields()[0].schema(), other.message_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.order_number)) {
        this.order_number = data().deepCopy(fields()[1].schema(), other.order_number);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.error_code)) {
        this.error_code = data().deepCopy(fields()[2].schema(), other.error_code);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.error_message)) {
        this.error_message = data().deepCopy(fields()[3].schema(), other.error_message);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.error_timestamp)) {
        this.error_timestamp = data().deepCopy(fields()[4].schema(), other.error_timestamp);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.original_payload)) {
        this.original_payload = data().deepCopy(fields()[5].schema(), other.original_payload);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing OrderError instance
     * @param other The existing instance to copy.
     */
    private Builder(dom.order.error.v0.OrderError other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.message_id)) {
        this.message_id = data().deepCopy(fields()[0].schema(), other.message_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.order_number)) {
        this.order_number = data().deepCopy(fields()[1].schema(), other.order_number);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.error_code)) {
        this.error_code = data().deepCopy(fields()[2].schema(), other.error_code);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.error_message)) {
        this.error_message = data().deepCopy(fields()[3].schema(), other.error_message);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.error_timestamp)) {
        this.error_timestamp = data().deepCopy(fields()[4].schema(), other.error_timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.original_payload)) {
        this.original_payload = data().deepCopy(fields()[5].schema(), other.original_payload);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return The value.
      */
    public java.lang.String getMessageId() {
      return message_id;
    }


    /**
      * Sets the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @param value The value of 'message_id'.
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder setMessageId(java.lang.String value) {
      validate(fields()[0], value);
      this.message_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'message_id' field has been set.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return True if the 'message_id' field has been set, false otherwise.
      */
    public boolean hasMessageId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder clearMessageId() {
      message_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller's system
      * @return The value.
      */
    public java.lang.String getOrderNumber() {
      return order_number;
    }


    /**
      * Sets the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller's system
      * @param value The value of 'order_number'.
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder setOrderNumber(java.lang.String value) {
      validate(fields()[1], value);
      this.order_number = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'order_number' field has been set.
      * Identifier for the order as referenced within the seller's system
      * @return True if the 'order_number' field has been set, false otherwise.
      */
    public boolean hasOrderNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller's system
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder clearOrderNumber() {
      order_number = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'error_code' field.
      * Unique code identifying the type of error
      * @return The value.
      */
    public java.lang.String getErrorCode() {
      return error_code;
    }


    /**
      * Sets the value of the 'error_code' field.
      * Unique code identifying the type of error
      * @param value The value of 'error_code'.
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder setErrorCode(java.lang.String value) {
      validate(fields()[2], value);
      this.error_code = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'error_code' field has been set.
      * Unique code identifying the type of error
      * @return True if the 'error_code' field has been set, false otherwise.
      */
    public boolean hasErrorCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'error_code' field.
      * Unique code identifying the type of error
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder clearErrorCode() {
      error_code = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'error_message' field.
      * Descriptive message explaining the error
      * @return The value.
      */
    public java.lang.String getErrorMessage() {
      return error_message;
    }


    /**
      * Sets the value of the 'error_message' field.
      * Descriptive message explaining the error
      * @param value The value of 'error_message'.
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder setErrorMessage(java.lang.String value) {
      validate(fields()[3], value);
      this.error_message = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'error_message' field has been set.
      * Descriptive message explaining the error
      * @return True if the 'error_message' field has been set, false otherwise.
      */
    public boolean hasErrorMessage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'error_message' field.
      * Descriptive message explaining the error
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder clearErrorMessage() {
      error_message = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'error_timestamp' field.
      * Timestamp when the error occurred in ISO-8601 format
      * @return The value.
      */
    public java.lang.String getErrorTimestamp() {
      return error_timestamp;
    }


    /**
      * Sets the value of the 'error_timestamp' field.
      * Timestamp when the error occurred in ISO-8601 format
      * @param value The value of 'error_timestamp'.
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder setErrorTimestamp(java.lang.String value) {
      validate(fields()[4], value);
      this.error_timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'error_timestamp' field has been set.
      * Timestamp when the error occurred in ISO-8601 format
      * @return True if the 'error_timestamp' field has been set, false otherwise.
      */
    public boolean hasErrorTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'error_timestamp' field.
      * Timestamp when the error occurred in ISO-8601 format
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder clearErrorTimestamp() {
      error_timestamp = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'original_payload' field.
      * JSON string representation of the original message that caused the error
      * @return The value.
      */
    public java.lang.String getOriginalPayload() {
      return original_payload;
    }


    /**
      * Sets the value of the 'original_payload' field.
      * JSON string representation of the original message that caused the error
      * @param value The value of 'original_payload'.
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder setOriginalPayload(java.lang.String value) {
      validate(fields()[5], value);
      this.original_payload = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'original_payload' field has been set.
      * JSON string representation of the original message that caused the error
      * @return True if the 'original_payload' field has been set, false otherwise.
      */
    public boolean hasOriginalPayload() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'original_payload' field.
      * JSON string representation of the original message that caused the error
      * @return This builder.
      */
    public dom.order.error.v0.OrderError.Builder clearOriginalPayload() {
      original_payload = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderError build() {
      try {
        OrderError record = new OrderError();
        record.message_id = fieldSetFlags()[0] ? this.message_id : (java.lang.String) defaultValue(fields()[0]);
        record.order_number = fieldSetFlags()[1] ? this.order_number : (java.lang.String) defaultValue(fields()[1]);
        record.error_code = fieldSetFlags()[2] ? this.error_code : (java.lang.String) defaultValue(fields()[2]);
        record.error_message = fieldSetFlags()[3] ? this.error_message : (java.lang.String) defaultValue(fields()[3]);
        record.error_timestamp = fieldSetFlags()[4] ? this.error_timestamp : (java.lang.String) defaultValue(fields()[4]);
        record.original_payload = fieldSetFlags()[5] ? this.original_payload : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderError>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderError>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderError>
    READER$ = (org.apache.avro.io.DatumReader<OrderError>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.message_id);

    if (this.order_number == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.order_number);
    }

    out.writeString(this.error_code);

    out.writeString(this.error_message);

    out.writeString(this.error_timestamp);

    if (this.original_payload == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.original_payload);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.message_id = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.order_number = null;
      } else {
        this.order_number = in.readString();
      }

      this.error_code = in.readString();

      this.error_message = in.readString();

      this.error_timestamp = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.original_payload = null;
      } else {
        this.original_payload = in.readString();
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.message_id = in.readString();
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.order_number = null;
          } else {
            this.order_number = in.readString();
          }
          break;

        case 2:
          this.error_code = in.readString();
          break;

        case 3:
          this.error_message = in.readString();
          break;

        case 4:
          this.error_timestamp = in.readString();
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.original_payload = null;
          } else {
            this.original_payload = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










