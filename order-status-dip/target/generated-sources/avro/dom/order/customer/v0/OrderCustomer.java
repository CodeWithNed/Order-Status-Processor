/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package dom.order.customer.v0;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Order with customer information enriched from seller data */
@org.apache.avro.specific.AvroGenerated
public class OrderCustomer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5219866659259929337L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderCustomer\",\"namespace\":\"dom.order.customer.v0\",\"doc\":\"Order with customer information enriched from seller data\",\"fields\":[{\"name\":\"message_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Any unique identifier which may be used for de-duplication of messages during consumption\",\"exmaple\":\"d59d8d8c-c781-11eb-b8bc-0242ac130003\"},{\"name\":\"seller_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Identifier for the seller who's products are contained in the order\",\"exmaple\":\"USBL, CABL etc.\"},{\"name\":\"customer_number\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Customer number as referenced within the seller's system\"},{\"name\":\"order_number\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Identifier for the order as referenced within the seller's system\"},{\"name\":\"order_type\",\"type\":{\"type\":\"enum\",\"name\":\"Order_Type\",\"symbols\":[\"ADHOC\",\"ENTERPRISE\"]},\"default\":\"ADHOC\"},{\"name\":\"route_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Route information of order delivery\",\"default\":null},{\"name\":\"delivery_date\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Delivery date of the order in the form of yyyy-MM-dd\",\"example\":\"2021-11-16\"},{\"name\":\"delivery_method\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The delivery method for the order\",\"example\":\"GROUND, WILL_CALL etc.\"},{\"name\":\"order_status\",\"type\":{\"type\":\"enum\",\"name\":\"Order_Status\",\"symbols\":[\"SUBMIT\",\"OPEN\",\"DOWN_TO_ROUTING\",\"LABEL\",\"ROUTED\",\"SHIPPED\",\"CANCEL\"]},\"doc\":\"Status of the order in the seller system\"},{\"name\":\"total_price\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\",\"java-class\":\"java.math.BigDecimal\"}],\"doc\":\"Total price of the order after considering substitutes, allocations and any other price adjustments\",\"default\":null},{\"name\":\"order_date\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"This field is used to represent the order date\",\"default\":null,\"example\":\"2023-01-25\"},{\"name\":\"created_timestamp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"This field is used to represent the created timestamp\",\"default\":null,\"example\":\"2022-12-28T16:55:30.252Z\"},{\"name\":\"updated_timestamp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"This field is used to represent the last modified timestamp\",\"default\":null,\"example\":\"2022-12-28T16:55:30.252Z\"},{\"name\":\"customer_name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Full name of the customer\",\"default\":null},{\"name\":\"customer_email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Email address of the customer\",\"default\":null},{\"name\":\"customer_telephone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Contact telephone number of the customer\",\"default\":null},{\"name\":\"customer_address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Delivery address of the customer\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderCustomer> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderCustomer> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrderCustomer> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrderCustomer> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrderCustomer> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrderCustomer to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrderCustomer from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrderCustomer instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrderCustomer fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Any unique identifier which may be used for de-duplication of messages during consumption */
  private java.lang.String message_id;
  /** Identifier for the seller who's products are contained in the order */
  private java.lang.String seller_id;
  /** Customer number as referenced within the seller's system */
  private java.lang.String customer_number;
  /** Identifier for the order as referenced within the seller's system */
  private java.lang.String order_number;
  private dom.order.customer.v0.Order_Type order_type;
  /** Route information of order delivery */
  private java.lang.String route_number;
  /** Delivery date of the order in the form of yyyy-MM-dd */
  private java.lang.String delivery_date;
  /** The delivery method for the order */
  private java.lang.String delivery_method;
  /** Status of the order in the seller system */
  private dom.order.customer.v0.Order_Status order_status;
  /** Total price of the order after considering substitutes, allocations and any other price adjustments */
  private java.math.BigDecimal total_price;
  /** This field is used to represent the order date */
  private java.lang.String order_date;
  /** This field is used to represent the created timestamp */
  private java.lang.String created_timestamp;
  /** This field is used to represent the last modified timestamp */
  private java.lang.String updated_timestamp;
  /** Full name of the customer */
  private java.lang.String customer_name;
  /** Email address of the customer */
  private java.lang.String customer_email;
  /** Contact telephone number of the customer */
  private java.lang.String customer_telephone;
  /** Delivery address of the customer */
  private java.lang.String customer_address;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderCustomer() {}

  /**
   * All-args constructor.
   * @param message_id Any unique identifier which may be used for de-duplication of messages during consumption
   * @param seller_id Identifier for the seller who's products are contained in the order
   * @param customer_number Customer number as referenced within the seller's system
   * @param order_number Identifier for the order as referenced within the seller's system
   * @param order_type The new value for order_type
   * @param route_number Route information of order delivery
   * @param delivery_date Delivery date of the order in the form of yyyy-MM-dd
   * @param delivery_method The delivery method for the order
   * @param order_status Status of the order in the seller system
   * @param total_price Total price of the order after considering substitutes, allocations and any other price adjustments
   * @param order_date This field is used to represent the order date
   * @param created_timestamp This field is used to represent the created timestamp
   * @param updated_timestamp This field is used to represent the last modified timestamp
   * @param customer_name Full name of the customer
   * @param customer_email Email address of the customer
   * @param customer_telephone Contact telephone number of the customer
   * @param customer_address Delivery address of the customer
   */
  public OrderCustomer(java.lang.String message_id, java.lang.String seller_id, java.lang.String customer_number, java.lang.String order_number, dom.order.customer.v0.Order_Type order_type, java.lang.String route_number, java.lang.String delivery_date, java.lang.String delivery_method, dom.order.customer.v0.Order_Status order_status, java.math.BigDecimal total_price, java.lang.String order_date, java.lang.String created_timestamp, java.lang.String updated_timestamp, java.lang.String customer_name, java.lang.String customer_email, java.lang.String customer_telephone, java.lang.String customer_address) {
    this.message_id = message_id;
    this.seller_id = seller_id;
    this.customer_number = customer_number;
    this.order_number = order_number;
    this.order_type = order_type;
    this.route_number = route_number;
    this.delivery_date = delivery_date;
    this.delivery_method = delivery_method;
    this.order_status = order_status;
    this.total_price = total_price;
    this.order_date = order_date;
    this.created_timestamp = created_timestamp;
    this.updated_timestamp = updated_timestamp;
    this.customer_name = customer_name;
    this.customer_email = customer_email;
    this.customer_telephone = customer_telephone;
    this.customer_address = customer_address;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return message_id;
    case 1: return seller_id;
    case 2: return customer_number;
    case 3: return order_number;
    case 4: return order_type;
    case 5: return route_number;
    case 6: return delivery_date;
    case 7: return delivery_method;
    case 8: return order_status;
    case 9: return total_price;
    case 10: return order_date;
    case 11: return created_timestamp;
    case 12: return updated_timestamp;
    case 13: return customer_name;
    case 14: return customer_email;
    case 15: return customer_telephone;
    case 16: return customer_address;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: message_id = value$ != null ? value$.toString() : null; break;
    case 1: seller_id = value$ != null ? value$.toString() : null; break;
    case 2: customer_number = value$ != null ? value$.toString() : null; break;
    case 3: order_number = value$ != null ? value$.toString() : null; break;
    case 4: order_type = (dom.order.customer.v0.Order_Type)value$; break;
    case 5: route_number = value$ != null ? value$.toString() : null; break;
    case 6: delivery_date = value$ != null ? value$.toString() : null; break;
    case 7: delivery_method = value$ != null ? value$.toString() : null; break;
    case 8: order_status = (dom.order.customer.v0.Order_Status)value$; break;
    case 9: total_price = (java.math.BigDecimal)value$; break;
    case 10: order_date = value$ != null ? value$.toString() : null; break;
    case 11: created_timestamp = value$ != null ? value$.toString() : null; break;
    case 12: updated_timestamp = value$ != null ? value$.toString() : null; break;
    case 13: customer_name = value$ != null ? value$.toString() : null; break;
    case 14: customer_email = value$ != null ? value$.toString() : null; break;
    case 15: customer_telephone = value$ != null ? value$.toString() : null; break;
    case 16: customer_address = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'message_id' field.
   * @return Any unique identifier which may be used for de-duplication of messages during consumption
   */
  public java.lang.String getMessageId() {
    return message_id;
  }


  /**
   * Sets the value of the 'message_id' field.
   * Any unique identifier which may be used for de-duplication of messages during consumption
   * @param value the value to set.
   */
  public void setMessageId(java.lang.String value) {
    this.message_id = value;
  }

  /**
   * Gets the value of the 'seller_id' field.
   * @return Identifier for the seller who's products are contained in the order
   */
  public java.lang.String getSellerId() {
    return seller_id;
  }


  /**
   * Sets the value of the 'seller_id' field.
   * Identifier for the seller who's products are contained in the order
   * @param value the value to set.
   */
  public void setSellerId(java.lang.String value) {
    this.seller_id = value;
  }

  /**
   * Gets the value of the 'customer_number' field.
   * @return Customer number as referenced within the seller's system
   */
  public java.lang.String getCustomerNumber() {
    return customer_number;
  }


  /**
   * Sets the value of the 'customer_number' field.
   * Customer number as referenced within the seller's system
   * @param value the value to set.
   */
  public void setCustomerNumber(java.lang.String value) {
    this.customer_number = value;
  }

  /**
   * Gets the value of the 'order_number' field.
   * @return Identifier for the order as referenced within the seller's system
   */
  public java.lang.String getOrderNumber() {
    return order_number;
  }


  /**
   * Sets the value of the 'order_number' field.
   * Identifier for the order as referenced within the seller's system
   * @param value the value to set.
   */
  public void setOrderNumber(java.lang.String value) {
    this.order_number = value;
  }

  /**
   * Gets the value of the 'order_type' field.
   * @return The value of the 'order_type' field.
   */
  public dom.order.customer.v0.Order_Type getOrderType() {
    return order_type;
  }


  /**
   * Sets the value of the 'order_type' field.
   * @param value the value to set.
   */
  public void setOrderType(dom.order.customer.v0.Order_Type value) {
    this.order_type = value;
  }

  /**
   * Gets the value of the 'route_number' field.
   * @return Route information of order delivery
   */
  public java.lang.String getRouteNumber() {
    return route_number;
  }


  /**
   * Sets the value of the 'route_number' field.
   * Route information of order delivery
   * @param value the value to set.
   */
  public void setRouteNumber(java.lang.String value) {
    this.route_number = value;
  }

  /**
   * Gets the value of the 'delivery_date' field.
   * @return Delivery date of the order in the form of yyyy-MM-dd
   */
  public java.lang.String getDeliveryDate() {
    return delivery_date;
  }


  /**
   * Sets the value of the 'delivery_date' field.
   * Delivery date of the order in the form of yyyy-MM-dd
   * @param value the value to set.
   */
  public void setDeliveryDate(java.lang.String value) {
    this.delivery_date = value;
  }

  /**
   * Gets the value of the 'delivery_method' field.
   * @return The delivery method for the order
   */
  public java.lang.String getDeliveryMethod() {
    return delivery_method;
  }


  /**
   * Sets the value of the 'delivery_method' field.
   * The delivery method for the order
   * @param value the value to set.
   */
  public void setDeliveryMethod(java.lang.String value) {
    this.delivery_method = value;
  }

  /**
   * Gets the value of the 'order_status' field.
   * @return Status of the order in the seller system
   */
  public dom.order.customer.v0.Order_Status getOrderStatus() {
    return order_status;
  }


  /**
   * Sets the value of the 'order_status' field.
   * Status of the order in the seller system
   * @param value the value to set.
   */
  public void setOrderStatus(dom.order.customer.v0.Order_Status value) {
    this.order_status = value;
  }

  /**
   * Gets the value of the 'total_price' field.
   * @return Total price of the order after considering substitutes, allocations and any other price adjustments
   */
  public java.math.BigDecimal getTotalPrice() {
    return total_price;
  }


  /**
   * Sets the value of the 'total_price' field.
   * Total price of the order after considering substitutes, allocations and any other price adjustments
   * @param value the value to set.
   */
  public void setTotalPrice(java.math.BigDecimal value) {
    this.total_price = value;
  }

  /**
   * Gets the value of the 'order_date' field.
   * @return This field is used to represent the order date
   */
  public java.lang.String getOrderDate() {
    return order_date;
  }


  /**
   * Sets the value of the 'order_date' field.
   * This field is used to represent the order date
   * @param value the value to set.
   */
  public void setOrderDate(java.lang.String value) {
    this.order_date = value;
  }

  /**
   * Gets the value of the 'created_timestamp' field.
   * @return This field is used to represent the created timestamp
   */
  public java.lang.String getCreatedTimestamp() {
    return created_timestamp;
  }


  /**
   * Sets the value of the 'created_timestamp' field.
   * This field is used to represent the created timestamp
   * @param value the value to set.
   */
  public void setCreatedTimestamp(java.lang.String value) {
    this.created_timestamp = value;
  }

  /**
   * Gets the value of the 'updated_timestamp' field.
   * @return This field is used to represent the last modified timestamp
   */
  public java.lang.String getUpdatedTimestamp() {
    return updated_timestamp;
  }


  /**
   * Sets the value of the 'updated_timestamp' field.
   * This field is used to represent the last modified timestamp
   * @param value the value to set.
   */
  public void setUpdatedTimestamp(java.lang.String value) {
    this.updated_timestamp = value;
  }

  /**
   * Gets the value of the 'customer_name' field.
   * @return Full name of the customer
   */
  public java.lang.String getCustomerName() {
    return customer_name;
  }


  /**
   * Sets the value of the 'customer_name' field.
   * Full name of the customer
   * @param value the value to set.
   */
  public void setCustomerName(java.lang.String value) {
    this.customer_name = value;
  }

  /**
   * Gets the value of the 'customer_email' field.
   * @return Email address of the customer
   */
  public java.lang.String getCustomerEmail() {
    return customer_email;
  }


  /**
   * Sets the value of the 'customer_email' field.
   * Email address of the customer
   * @param value the value to set.
   */
  public void setCustomerEmail(java.lang.String value) {
    this.customer_email = value;
  }

  /**
   * Gets the value of the 'customer_telephone' field.
   * @return Contact telephone number of the customer
   */
  public java.lang.String getCustomerTelephone() {
    return customer_telephone;
  }


  /**
   * Sets the value of the 'customer_telephone' field.
   * Contact telephone number of the customer
   * @param value the value to set.
   */
  public void setCustomerTelephone(java.lang.String value) {
    this.customer_telephone = value;
  }

  /**
   * Gets the value of the 'customer_address' field.
   * @return Delivery address of the customer
   */
  public java.lang.String getCustomerAddress() {
    return customer_address;
  }


  /**
   * Sets the value of the 'customer_address' field.
   * Delivery address of the customer
   * @param value the value to set.
   */
  public void setCustomerAddress(java.lang.String value) {
    this.customer_address = value;
  }

  /**
   * Creates a new OrderCustomer RecordBuilder.
   * @return A new OrderCustomer RecordBuilder
   */
  public static dom.order.customer.v0.OrderCustomer.Builder newBuilder() {
    return new dom.order.customer.v0.OrderCustomer.Builder();
  }

  /**
   * Creates a new OrderCustomer RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderCustomer RecordBuilder
   */
  public static dom.order.customer.v0.OrderCustomer.Builder newBuilder(dom.order.customer.v0.OrderCustomer.Builder other) {
    if (other == null) {
      return new dom.order.customer.v0.OrderCustomer.Builder();
    } else {
      return new dom.order.customer.v0.OrderCustomer.Builder(other);
    }
  }

  /**
   * Creates a new OrderCustomer RecordBuilder by copying an existing OrderCustomer instance.
   * @param other The existing instance to copy.
   * @return A new OrderCustomer RecordBuilder
   */
  public static dom.order.customer.v0.OrderCustomer.Builder newBuilder(dom.order.customer.v0.OrderCustomer other) {
    if (other == null) {
      return new dom.order.customer.v0.OrderCustomer.Builder();
    } else {
      return new dom.order.customer.v0.OrderCustomer.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrderCustomer instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderCustomer>
    implements org.apache.avro.data.RecordBuilder<OrderCustomer> {

    /** Any unique identifier which may be used for de-duplication of messages during consumption */
    private java.lang.String message_id;
    /** Identifier for the seller who's products are contained in the order */
    private java.lang.String seller_id;
    /** Customer number as referenced within the seller's system */
    private java.lang.String customer_number;
    /** Identifier for the order as referenced within the seller's system */
    private java.lang.String order_number;
    private dom.order.customer.v0.Order_Type order_type;
    /** Route information of order delivery */
    private java.lang.String route_number;
    /** Delivery date of the order in the form of yyyy-MM-dd */
    private java.lang.String delivery_date;
    /** The delivery method for the order */
    private java.lang.String delivery_method;
    /** Status of the order in the seller system */
    private dom.order.customer.v0.Order_Status order_status;
    /** Total price of the order after considering substitutes, allocations and any other price adjustments */
    private java.math.BigDecimal total_price;
    /** This field is used to represent the order date */
    private java.lang.String order_date;
    /** This field is used to represent the created timestamp */
    private java.lang.String created_timestamp;
    /** This field is used to represent the last modified timestamp */
    private java.lang.String updated_timestamp;
    /** Full name of the customer */
    private java.lang.String customer_name;
    /** Email address of the customer */
    private java.lang.String customer_email;
    /** Contact telephone number of the customer */
    private java.lang.String customer_telephone;
    /** Delivery address of the customer */
    private java.lang.String customer_address;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(dom.order.customer.v0.OrderCustomer.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.message_id)) {
        this.message_id = data().deepCopy(fields()[0].schema(), other.message_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.seller_id)) {
        this.seller_id = data().deepCopy(fields()[1].schema(), other.seller_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.customer_number)) {
        this.customer_number = data().deepCopy(fields()[2].schema(), other.customer_number);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.order_number)) {
        this.order_number = data().deepCopy(fields()[3].schema(), other.order_number);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.order_type)) {
        this.order_type = data().deepCopy(fields()[4].schema(), other.order_type);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.route_number)) {
        this.route_number = data().deepCopy(fields()[5].schema(), other.route_number);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.delivery_date)) {
        this.delivery_date = data().deepCopy(fields()[6].schema(), other.delivery_date);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.delivery_method)) {
        this.delivery_method = data().deepCopy(fields()[7].schema(), other.delivery_method);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.order_status)) {
        this.order_status = data().deepCopy(fields()[8].schema(), other.order_status);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.total_price)) {
        this.total_price = data().deepCopy(fields()[9].schema(), other.total_price);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.order_date)) {
        this.order_date = data().deepCopy(fields()[10].schema(), other.order_date);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.created_timestamp)) {
        this.created_timestamp = data().deepCopy(fields()[11].schema(), other.created_timestamp);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.updated_timestamp)) {
        this.updated_timestamp = data().deepCopy(fields()[12].schema(), other.updated_timestamp);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.customer_name)) {
        this.customer_name = data().deepCopy(fields()[13].schema(), other.customer_name);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.customer_email)) {
        this.customer_email = data().deepCopy(fields()[14].schema(), other.customer_email);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.customer_telephone)) {
        this.customer_telephone = data().deepCopy(fields()[15].schema(), other.customer_telephone);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.customer_address)) {
        this.customer_address = data().deepCopy(fields()[16].schema(), other.customer_address);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
    }

    /**
     * Creates a Builder by copying an existing OrderCustomer instance
     * @param other The existing instance to copy.
     */
    private Builder(dom.order.customer.v0.OrderCustomer other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.message_id)) {
        this.message_id = data().deepCopy(fields()[0].schema(), other.message_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.seller_id)) {
        this.seller_id = data().deepCopy(fields()[1].schema(), other.seller_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customer_number)) {
        this.customer_number = data().deepCopy(fields()[2].schema(), other.customer_number);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.order_number)) {
        this.order_number = data().deepCopy(fields()[3].schema(), other.order_number);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.order_type)) {
        this.order_type = data().deepCopy(fields()[4].schema(), other.order_type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.route_number)) {
        this.route_number = data().deepCopy(fields()[5].schema(), other.route_number);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.delivery_date)) {
        this.delivery_date = data().deepCopy(fields()[6].schema(), other.delivery_date);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.delivery_method)) {
        this.delivery_method = data().deepCopy(fields()[7].schema(), other.delivery_method);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.order_status)) {
        this.order_status = data().deepCopy(fields()[8].schema(), other.order_status);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.total_price)) {
        this.total_price = data().deepCopy(fields()[9].schema(), other.total_price);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.order_date)) {
        this.order_date = data().deepCopy(fields()[10].schema(), other.order_date);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.created_timestamp)) {
        this.created_timestamp = data().deepCopy(fields()[11].schema(), other.created_timestamp);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.updated_timestamp)) {
        this.updated_timestamp = data().deepCopy(fields()[12].schema(), other.updated_timestamp);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.customer_name)) {
        this.customer_name = data().deepCopy(fields()[13].schema(), other.customer_name);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.customer_email)) {
        this.customer_email = data().deepCopy(fields()[14].schema(), other.customer_email);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.customer_telephone)) {
        this.customer_telephone = data().deepCopy(fields()[15].schema(), other.customer_telephone);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.customer_address)) {
        this.customer_address = data().deepCopy(fields()[16].schema(), other.customer_address);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return The value.
      */
    public java.lang.String getMessageId() {
      return message_id;
    }


    /**
      * Sets the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @param value The value of 'message_id'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setMessageId(java.lang.String value) {
      validate(fields()[0], value);
      this.message_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'message_id' field has been set.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return True if the 'message_id' field has been set, false otherwise.
      */
    public boolean hasMessageId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearMessageId() {
      message_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'seller_id' field.
      * Identifier for the seller who's products are contained in the order
      * @return The value.
      */
    public java.lang.String getSellerId() {
      return seller_id;
    }


    /**
      * Sets the value of the 'seller_id' field.
      * Identifier for the seller who's products are contained in the order
      * @param value The value of 'seller_id'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setSellerId(java.lang.String value) {
      validate(fields()[1], value);
      this.seller_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'seller_id' field has been set.
      * Identifier for the seller who's products are contained in the order
      * @return True if the 'seller_id' field has been set, false otherwise.
      */
    public boolean hasSellerId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'seller_id' field.
      * Identifier for the seller who's products are contained in the order
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearSellerId() {
      seller_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_number' field.
      * Customer number as referenced within the seller's system
      * @return The value.
      */
    public java.lang.String getCustomerNumber() {
      return customer_number;
    }


    /**
      * Sets the value of the 'customer_number' field.
      * Customer number as referenced within the seller's system
      * @param value The value of 'customer_number'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setCustomerNumber(java.lang.String value) {
      validate(fields()[2], value);
      this.customer_number = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_number' field has been set.
      * Customer number as referenced within the seller's system
      * @return True if the 'customer_number' field has been set, false otherwise.
      */
    public boolean hasCustomerNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'customer_number' field.
      * Customer number as referenced within the seller's system
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearCustomerNumber() {
      customer_number = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller's system
      * @return The value.
      */
    public java.lang.String getOrderNumber() {
      return order_number;
    }


    /**
      * Sets the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller's system
      * @param value The value of 'order_number'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setOrderNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.order_number = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'order_number' field has been set.
      * Identifier for the order as referenced within the seller's system
      * @return True if the 'order_number' field has been set, false otherwise.
      */
    public boolean hasOrderNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller's system
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearOrderNumber() {
      order_number = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_type' field.
      * @return The value.
      */
    public dom.order.customer.v0.Order_Type getOrderType() {
      return order_type;
    }


    /**
      * Sets the value of the 'order_type' field.
      * @param value The value of 'order_type'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setOrderType(dom.order.customer.v0.Order_Type value) {
      validate(fields()[4], value);
      this.order_type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'order_type' field has been set.
      * @return True if the 'order_type' field has been set, false otherwise.
      */
    public boolean hasOrderType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'order_type' field.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearOrderType() {
      order_type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'route_number' field.
      * Route information of order delivery
      * @return The value.
      */
    public java.lang.String getRouteNumber() {
      return route_number;
    }


    /**
      * Sets the value of the 'route_number' field.
      * Route information of order delivery
      * @param value The value of 'route_number'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setRouteNumber(java.lang.String value) {
      validate(fields()[5], value);
      this.route_number = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'route_number' field has been set.
      * Route information of order delivery
      * @return True if the 'route_number' field has been set, false otherwise.
      */
    public boolean hasRouteNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'route_number' field.
      * Route information of order delivery
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearRouteNumber() {
      route_number = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'delivery_date' field.
      * Delivery date of the order in the form of yyyy-MM-dd
      * @return The value.
      */
    public java.lang.String getDeliveryDate() {
      return delivery_date;
    }


    /**
      * Sets the value of the 'delivery_date' field.
      * Delivery date of the order in the form of yyyy-MM-dd
      * @param value The value of 'delivery_date'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setDeliveryDate(java.lang.String value) {
      validate(fields()[6], value);
      this.delivery_date = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'delivery_date' field has been set.
      * Delivery date of the order in the form of yyyy-MM-dd
      * @return True if the 'delivery_date' field has been set, false otherwise.
      */
    public boolean hasDeliveryDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'delivery_date' field.
      * Delivery date of the order in the form of yyyy-MM-dd
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearDeliveryDate() {
      delivery_date = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'delivery_method' field.
      * The delivery method for the order
      * @return The value.
      */
    public java.lang.String getDeliveryMethod() {
      return delivery_method;
    }


    /**
      * Sets the value of the 'delivery_method' field.
      * The delivery method for the order
      * @param value The value of 'delivery_method'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setDeliveryMethod(java.lang.String value) {
      validate(fields()[7], value);
      this.delivery_method = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'delivery_method' field has been set.
      * The delivery method for the order
      * @return True if the 'delivery_method' field has been set, false otherwise.
      */
    public boolean hasDeliveryMethod() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'delivery_method' field.
      * The delivery method for the order
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearDeliveryMethod() {
      delivery_method = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_status' field.
      * Status of the order in the seller system
      * @return The value.
      */
    public dom.order.customer.v0.Order_Status getOrderStatus() {
      return order_status;
    }


    /**
      * Sets the value of the 'order_status' field.
      * Status of the order in the seller system
      * @param value The value of 'order_status'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setOrderStatus(dom.order.customer.v0.Order_Status value) {
      validate(fields()[8], value);
      this.order_status = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'order_status' field has been set.
      * Status of the order in the seller system
      * @return True if the 'order_status' field has been set, false otherwise.
      */
    public boolean hasOrderStatus() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'order_status' field.
      * Status of the order in the seller system
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearOrderStatus() {
      order_status = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_price' field.
      * Total price of the order after considering substitutes, allocations and any other price adjustments
      * @return The value.
      */
    public java.math.BigDecimal getTotalPrice() {
      return total_price;
    }


    /**
      * Sets the value of the 'total_price' field.
      * Total price of the order after considering substitutes, allocations and any other price adjustments
      * @param value The value of 'total_price'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setTotalPrice(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.total_price = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'total_price' field has been set.
      * Total price of the order after considering substitutes, allocations and any other price adjustments
      * @return True if the 'total_price' field has been set, false otherwise.
      */
    public boolean hasTotalPrice() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'total_price' field.
      * Total price of the order after considering substitutes, allocations and any other price adjustments
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearTotalPrice() {
      total_price = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_date' field.
      * This field is used to represent the order date
      * @return The value.
      */
    public java.lang.String getOrderDate() {
      return order_date;
    }


    /**
      * Sets the value of the 'order_date' field.
      * This field is used to represent the order date
      * @param value The value of 'order_date'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setOrderDate(java.lang.String value) {
      validate(fields()[10], value);
      this.order_date = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'order_date' field has been set.
      * This field is used to represent the order date
      * @return True if the 'order_date' field has been set, false otherwise.
      */
    public boolean hasOrderDate() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'order_date' field.
      * This field is used to represent the order date
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearOrderDate() {
      order_date = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_timestamp' field.
      * This field is used to represent the created timestamp
      * @return The value.
      */
    public java.lang.String getCreatedTimestamp() {
      return created_timestamp;
    }


    /**
      * Sets the value of the 'created_timestamp' field.
      * This field is used to represent the created timestamp
      * @param value The value of 'created_timestamp'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setCreatedTimestamp(java.lang.String value) {
      validate(fields()[11], value);
      this.created_timestamp = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'created_timestamp' field has been set.
      * This field is used to represent the created timestamp
      * @return True if the 'created_timestamp' field has been set, false otherwise.
      */
    public boolean hasCreatedTimestamp() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'created_timestamp' field.
      * This field is used to represent the created timestamp
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearCreatedTimestamp() {
      created_timestamp = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'updated_timestamp' field.
      * This field is used to represent the last modified timestamp
      * @return The value.
      */
    public java.lang.String getUpdatedTimestamp() {
      return updated_timestamp;
    }


    /**
      * Sets the value of the 'updated_timestamp' field.
      * This field is used to represent the last modified timestamp
      * @param value The value of 'updated_timestamp'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setUpdatedTimestamp(java.lang.String value) {
      validate(fields()[12], value);
      this.updated_timestamp = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_timestamp' field has been set.
      * This field is used to represent the last modified timestamp
      * @return True if the 'updated_timestamp' field has been set, false otherwise.
      */
    public boolean hasUpdatedTimestamp() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'updated_timestamp' field.
      * This field is used to represent the last modified timestamp
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearUpdatedTimestamp() {
      updated_timestamp = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_name' field.
      * Full name of the customer
      * @return The value.
      */
    public java.lang.String getCustomerName() {
      return customer_name;
    }


    /**
      * Sets the value of the 'customer_name' field.
      * Full name of the customer
      * @param value The value of 'customer_name'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setCustomerName(java.lang.String value) {
      validate(fields()[13], value);
      this.customer_name = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_name' field has been set.
      * Full name of the customer
      * @return True if the 'customer_name' field has been set, false otherwise.
      */
    public boolean hasCustomerName() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'customer_name' field.
      * Full name of the customer
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearCustomerName() {
      customer_name = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_email' field.
      * Email address of the customer
      * @return The value.
      */
    public java.lang.String getCustomerEmail() {
      return customer_email;
    }


    /**
      * Sets the value of the 'customer_email' field.
      * Email address of the customer
      * @param value The value of 'customer_email'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setCustomerEmail(java.lang.String value) {
      validate(fields()[14], value);
      this.customer_email = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_email' field has been set.
      * Email address of the customer
      * @return True if the 'customer_email' field has been set, false otherwise.
      */
    public boolean hasCustomerEmail() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'customer_email' field.
      * Email address of the customer
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearCustomerEmail() {
      customer_email = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_telephone' field.
      * Contact telephone number of the customer
      * @return The value.
      */
    public java.lang.String getCustomerTelephone() {
      return customer_telephone;
    }


    /**
      * Sets the value of the 'customer_telephone' field.
      * Contact telephone number of the customer
      * @param value The value of 'customer_telephone'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setCustomerTelephone(java.lang.String value) {
      validate(fields()[15], value);
      this.customer_telephone = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_telephone' field has been set.
      * Contact telephone number of the customer
      * @return True if the 'customer_telephone' field has been set, false otherwise.
      */
    public boolean hasCustomerTelephone() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'customer_telephone' field.
      * Contact telephone number of the customer
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearCustomerTelephone() {
      customer_telephone = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_address' field.
      * Delivery address of the customer
      * @return The value.
      */
    public java.lang.String getCustomerAddress() {
      return customer_address;
    }


    /**
      * Sets the value of the 'customer_address' field.
      * Delivery address of the customer
      * @param value The value of 'customer_address'.
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder setCustomerAddress(java.lang.String value) {
      validate(fields()[16], value);
      this.customer_address = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_address' field has been set.
      * Delivery address of the customer
      * @return True if the 'customer_address' field has been set, false otherwise.
      */
    public boolean hasCustomerAddress() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'customer_address' field.
      * Delivery address of the customer
      * @return This builder.
      */
    public dom.order.customer.v0.OrderCustomer.Builder clearCustomerAddress() {
      customer_address = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderCustomer build() {
      try {
        OrderCustomer record = new OrderCustomer();
        record.message_id = fieldSetFlags()[0] ? this.message_id : (java.lang.String) defaultValue(fields()[0]);
        record.seller_id = fieldSetFlags()[1] ? this.seller_id : (java.lang.String) defaultValue(fields()[1]);
        record.customer_number = fieldSetFlags()[2] ? this.customer_number : (java.lang.String) defaultValue(fields()[2]);
        record.order_number = fieldSetFlags()[3] ? this.order_number : (java.lang.String) defaultValue(fields()[3]);
        record.order_type = fieldSetFlags()[4] ? this.order_type : (dom.order.customer.v0.Order_Type) defaultValue(fields()[4]);
        record.route_number = fieldSetFlags()[5] ? this.route_number : (java.lang.String) defaultValue(fields()[5]);
        record.delivery_date = fieldSetFlags()[6] ? this.delivery_date : (java.lang.String) defaultValue(fields()[6]);
        record.delivery_method = fieldSetFlags()[7] ? this.delivery_method : (java.lang.String) defaultValue(fields()[7]);
        record.order_status = fieldSetFlags()[8] ? this.order_status : (dom.order.customer.v0.Order_Status) defaultValue(fields()[8]);
        record.total_price = fieldSetFlags()[9] ? this.total_price : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.order_date = fieldSetFlags()[10] ? this.order_date : (java.lang.String) defaultValue(fields()[10]);
        record.created_timestamp = fieldSetFlags()[11] ? this.created_timestamp : (java.lang.String) defaultValue(fields()[11]);
        record.updated_timestamp = fieldSetFlags()[12] ? this.updated_timestamp : (java.lang.String) defaultValue(fields()[12]);
        record.customer_name = fieldSetFlags()[13] ? this.customer_name : (java.lang.String) defaultValue(fields()[13]);
        record.customer_email = fieldSetFlags()[14] ? this.customer_email : (java.lang.String) defaultValue(fields()[14]);
        record.customer_telephone = fieldSetFlags()[15] ? this.customer_telephone : (java.lang.String) defaultValue(fields()[15]);
        record.customer_address = fieldSetFlags()[16] ? this.customer_address : (java.lang.String) defaultValue(fields()[16]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderCustomer>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderCustomer>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderCustomer>
    READER$ = (org.apache.avro.io.DatumReader<OrderCustomer>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.message_id);

    out.writeString(this.seller_id);

    out.writeString(this.customer_number);

    out.writeString(this.order_number);

    out.writeEnum(this.order_type.ordinal());

    if (this.route_number == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.route_number);
    }

    out.writeString(this.delivery_date);

    out.writeString(this.delivery_method);

    out.writeEnum(this.order_status.ordinal());

    if (this.total_price == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.total_price.toString());
    }

    if (this.order_date == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.order_date);
    }

    if (this.created_timestamp == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.created_timestamp);
    }

    if (this.updated_timestamp == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.updated_timestamp);
    }

    if (this.customer_name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customer_name);
    }

    if (this.customer_email == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customer_email);
    }

    if (this.customer_telephone == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customer_telephone);
    }

    if (this.customer_address == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customer_address);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.message_id = in.readString();

      this.seller_id = in.readString();

      this.customer_number = in.readString();

      this.order_number = in.readString();

      this.order_type = dom.order.customer.v0.Order_Type.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.route_number = null;
      } else {
        this.route_number = in.readString();
      }

      this.delivery_date = in.readString();

      this.delivery_method = in.readString();

      this.order_status = dom.order.customer.v0.Order_Status.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.total_price = null;
      } else {
        this.total_price = new java.math.BigDecimal(in.readString());
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.order_date = null;
      } else {
        this.order_date = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.created_timestamp = null;
      } else {
        this.created_timestamp = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.updated_timestamp = null;
      } else {
        this.updated_timestamp = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customer_name = null;
      } else {
        this.customer_name = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customer_email = null;
      } else {
        this.customer_email = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customer_telephone = null;
      } else {
        this.customer_telephone = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customer_address = null;
      } else {
        this.customer_address = in.readString();
      }

    } else {
      for (int i = 0; i < 17; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.message_id = in.readString();
          break;

        case 1:
          this.seller_id = in.readString();
          break;

        case 2:
          this.customer_number = in.readString();
          break;

        case 3:
          this.order_number = in.readString();
          break;

        case 4:
          this.order_type = dom.order.customer.v0.Order_Type.values()[in.readEnum()];
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.route_number = null;
          } else {
            this.route_number = in.readString();
          }
          break;

        case 6:
          this.delivery_date = in.readString();
          break;

        case 7:
          this.delivery_method = in.readString();
          break;

        case 8:
          this.order_status = dom.order.customer.v0.Order_Status.values()[in.readEnum()];
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.total_price = null;
          } else {
            this.total_price = new java.math.BigDecimal(in.readString());
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.order_date = null;
          } else {
            this.order_date = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.created_timestamp = null;
          } else {
            this.created_timestamp = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.updated_timestamp = null;
          } else {
            this.updated_timestamp = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customer_name = null;
          } else {
            this.customer_name = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customer_email = null;
          } else {
            this.customer_email = in.readString();
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customer_telephone = null;
          } else {
            this.customer_telephone = in.readString();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customer_address = null;
          } else {
            this.customer_address = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










